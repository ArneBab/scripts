Release process
---------------

tag-build [build number]
# tags a build, asks for a changelog
release-fred
# builds the Fred jar, source archive, signs them, creates l10n diffs, and uploads to osprey. Inserts Fred jar into Freenet, for snapshots. DOES NOT insert fred jars for full builds.
release-installer
# builds the linux/mac installer and uploads it to osprey
release-wininstaller
# builds the windows installer and uploads it to osprey

# Now the release manager should install a test node:
java -jar [location of released jars]/new_installer_offline_[buildnumber].jar
# (Or the Windows equivalent, ideally test both)
# Make sure it bootstraps successfully, can access fproxy etc.

upload-snapshots-googlecode
# Uploads the jars and installers to Google Code, from where they are (mostly) served.

# ssh into osprey and use deploy-website (you should ideally pull the changes and check the object ID's against those on your local system for extra security)

insert-update
# inserts the jars to a node, by default on :9482, i.e. the test node you set up above. Do not insert the jars on a development node which may have heavy logging and so leak the keys.

# Wait for the inserts to finish.
