#!/bin/bash
# Attempts to verify that the latest build corresponds to the bytecode.
# Main requirement is to run the script on a system using the same Java compiler as the system that released it.
# For builds by toad, this is Sun 1.6.0_26 (sun-java6-jdk; 6.26-0squeeze1) on Debian Squeeze.
# Uses lib-pyFreenet to fetch the in-Freenet JAR over FCP,
# and so requires Python and lib-pyFreenet. (fcpget)

# Shared default configuration and utility functions.
source freenet-scripts-common || exit
readConfig

: ${TEMPBASE:=~/}
: ${FREENET_EXT_JAR:=$freenetExtPath}
: ${BOUNCY_CASTLE_JAR:=$releaseDir/bcprov.jar}

## TODO MAJOR: Get the latest build number from somewhere other than the repository, e.g. Freenet, announcements, etc.
## TODO MAJOR: Verify the installers
## TODO: Automatically download freenet-ext.jar if not present, in a secure fashion.
## TODO: Deal with freenet-ext.jar updating automatically.
## TODO: Verify freenet-ext.jar itself.
## TODO: Hard-code the certificate for SSL see the code in update.sh in app-new_installer
## TODO: Detect who released it and complain if not the same compiler? Or even install several copies?
## TODO: Allow choosing Freenet jar sources: at least one of website, freenet.
## TODO: Also verify consistency of source archives.

# Exit with an error if freenet-ext does not exist.
if [[ ! -e "$FREENET_EXT_JAR" ]]; then
    echo "The path \"$FREENET_EXT_JAR\" does not exist."
    exit 10
fi
if [[ ! -e "$BOUNCY_CASTLE_JAR" ]]; then
    echo "The path \"$BOUNCY_CASTLE_JAR\" does not exist."
    exit 10
fi
if ! fcpget --version; then
    echo "fcpget - part of lib-pyFreenet - is not installed."
    exit 10
fi

while :
do
    case $1 in
        --help | -h | -\?)
            echo "--tag TAG specifies build tag to checkout."
            echo "--repo PATH specifies path to a fred-official repository."
            echo "            If this is not specified, the script will make a fresh clone to its"
            echo "            temporary directory."
            exit 0
            ;;
        --tag)
            TAG="$2"
            shift 2
            ;;
        --repo)
            REPO=$(readlink -f "$2")
            shift 2
            ;;
        --) # End of all options
            shift
            break
            ;;
        -*)
            echo "Unknown option: $1"
            exit 1
            ;;
        *)  # No more options; stop parsing.
            break
            ;;
    esac
done

TMPDIR=$(mktemp -d --tmpdir=$TEMPBASE)
echo Using "$TMPDIR"

REPO="$fredDir"
    cd "$REPO"
    if ! git remote update; then
        echo Unable to update git repository.
        exit 13
    fi
# The tag was not specified so autodetect.
if [[ -z "$TAG" ]]; then
    getBuildInfo
    TAG=$gitVersion
fi
echo Using build "$TAG"
cd "$TMPDIR"
if ! git clone "$REPO" fred; then
    echo Unable to clone repo.
    exit 14
fi
cd fred
    if ! git checkout "$TAG"; then
        echo Unable to checkout build tag.
        exit 14
    fi

if ! git tag -v "$TAG"; then
    echo Failed to verify tag "$TAG"
    exit 11
fi
BUILD=$buildNumber
if [[ -z $BUILD ]]; then
	echo Unable to determine build number.
	exit 3
fi

echo Build number $BUILD
if ! cp "$FREENET_EXT_JAR" lib/freenet/freenet-ext.jar; then
	echo Unable to copy freenet-ext.jar from "$FREENET_EXT_JAR"
	exit 12
fi
if ! cp "$BOUNCY_CASTLE_JAR" lib/bcprov.jar; then
	echo Unable to copy bcprov.jar from "$BOUNCY_CASTLE_JAR"
	exit 12
fi
if ! (ant clean && ant package-only); then
	echo Unable to build from repository.
	exit 8
fi

cd ..
mkdir unpacked-built
if ! unzip "$REPO/dist/freenet.jar" -d unpacked-built > /dev/null; then
    echo Failed to unpack built jar
    exit 9
fi
if ! wget "https://downloads.freenetproject.org/alpha/freenet-${TAG}.jar.sig" -O freenet.jar.sig; then
	echo Unable to fetch signature "https://downloads.freenetproject.org/alpha/freenet-${TAG}.jar.sig" from the official Freenet website.
	exit 4
fi
if ! wget "https://downloads.freenetproject.org/alpha/freenet-${TAG}.jar" -O freenet.jar; then
	echo Unable to fetch jar file "https://downloads.freenetproject.org/alpha/freenet-${TAG}.jar" from the official Freenet website.
	exit 5;
fi
if ! gpg --logger-fd 1 --verify freenet.jar.sig freenet.jar; then
	echo "Unable to verify signature on jar"
	exit 6;
fi

# Check that the website and hosted versions are identical.
# TODO: Detect update USK from node config
fcpget --fcpHost="$fcpHost" --fcpPort="$fcpPort" "SSK@sabn9HY9MKLbFPp851AO98uKtsCtYHM9rqB~A5cCGW4,3yps2z06rLnwf50QU4HvsILakRBYd4vBlPtLv0elUts,AQACAAE/jar-${BUILD}" inserted-freenet.jar
if [ ! -e "inserted-freenet.jar" ]; then
    echo "Unable to fetch freenet.jar from Freenet."
    exit 12
fi
if ! cmp freenet.jar inserted-freenet.jar; then
    echo FAILED TO VERIFY: The freenet.jar from the website and the
    echo freenet.jar fetched from Freenet are different.
    echo "Website jar SHA512: $(sha512sum freenet.jar)"
    echo "Inserted jar SHA512: $(sha512sum inserted-freenet.jar)"
    exit 11
else
    echo freenet.jar from the website and fetched from Freenet are the same.
fi

mkdir unpacked-official
if ! unzip freenet.jar -d unpacked-official > /dev/null; then
	echo Failed to unpack official released jar
	exit 7;
fi

# Ready to do the comparison
(cd unpacked-official; find -type f) | sort > unpacked-official.list
(cd unpacked-built; find -type f) | sort > unpacked-built.list
if ! cmp unpacked-official.list unpacked-built.list; then
    echo FAILED TO VERIFY: Different files in official vs built
    echo Files in official but not in built are marked as +
    echo Files in built but not in official are marked with -
    diff -u unpacked-built.list unpacked-official.list
    exit 9
fi

DIFFS="differences"
if [[ -e "$DIFFS" ]]; then
    rm "$DIFFS"
fi
while read x; do
    if ! cmp "unpacked-official/$x" "unpacked-built/$x"; then
        if [[ "$x" = "./META-INF/MANIFEST.MF" ]]; then
            echo "Manifest file is different; this is expected."
            echo "Please review the differences:"
            diff "unpacked-official/$x" "unpacked-built/$x"
        else
            echo "File is different: $x"
            echo "$x" >> "$DIFFS"
        fi
    fi
done < unpacked-official.list

summary() {
    echo "Tag ${TAG} / build ${BUILD}"
    echo "Official jar SHA512: $(sha512sum freenet.jar)"
    echo "Official jar signature SHA512: $(sha512sum freenet.jar.sig)"
    echo "Git repository is at object $(cat "$REPO/.git/HEAD")"
}

if [[ -s "differences" ]]; then
    echo VERIFY FAILED: FILES ARE DIFFERENT:
    cat $DIFFS
    summary
    exit 10
fi
echo "Verification successful."
summary
cd ..
rm -Rf $TMPDIR
