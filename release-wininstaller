#!/bin/bash

# This script uses Wine to build the Windows installer executables under a
# restricted user account. It builds the user's home directory from scratch
# each run for a clean build, and kills processes from the restricted user
# after compilation is complete. The executables can then be signed and
# uploaded.
#
# It is assumed that this script is run as root, as it uses chown and kills
# the restricted user's processes after the build completes.
#
# Requirements:
#   Build:
#       sha1sum
#       localhost SSH server on port 22
#       xvfb
#       wine 1.4
#   Sign:
#       gpg
#   Release:
#       rsync
#       ssh-agent

# Whether to exit before releasing.
DRY_RUN="false"

# Defaults:
# Target directory for generated files.
RELEASE_DIRECTORY="/usr/src/cvs/eclipse-workspace/FreenetReleased"
# Windows installer source location.
WININSTALLER_PATH="/usr/src/cvs/eclipse-workspace/app-wininstaller"
# User to switch to when signing the release.
SIGNING_USER="toad"
# Freenet seednode file location.
SEEDNODE_PATH="/home/${SIGNING_USER}/seednodes.fref"
# User to run Wine under.
WINE_USER="freenet-buildwin"
# Path to configuration file.
CONFIG="${HOME}/.freenetrc"
# Hostname to send updates to.
TARGET_HOST="osprey.vm.bytemark.co.uk"
# Path to freenet-ext.
FREENET_EXT_JAR="${RELEASE_DIRECTORY}/freenet-ext.jar"

while :
do
    case $1 in
        --help | - | -\?)
            cat <<EOF
Builds and releases the Windows installers.
Prompts for confirmation before releasing.
Configuration file is at ${CONFIG} by default.

--config CONFIG   Path to freenetrc
--dry-run         Do not release. Build and sign the installer, then exit.
EOF
            exit 0
            ;;
        --config)
            CONFIG="$2"
            shift 2
            ;;
        --dry-run)
            DRY_RUN="true"
            shift
            ;;
        --) # End of all options
            shift
            break
            ;;
        -*)
            echo "Unknown option: $1"
            exit 1
            ;;
        *)  # No more options; stop parsing.
            break
            ;;
    esac
done

# override these variables, if necessary
if [ -f "${CONFIG}" ]; then
    . "${CONFIG}"
fi

# Home directory is 6th field; line is delimited by colons.
# ~${VARIABLE} does not expand to a home directory in Bash
# because ~-expansion is done before variable expansion.
function getHome() {
    echo $(getent passwd "$1" | cut -d: -f6)
}
WINE_HOME=$(getHome "${WINE_USER}")
SIGNING_HOME=$(getHome "${SIGNING_USER}")

if [[ -z "$WINE_HOME" ]]; then
    echo "Cannot find home directory for Wine user \"${WINE_USER}\"."
    exit 1
fi
if [[ -z "$SIGNING_HOME" ]]; then
    echo "Cannot find home directory for signing user \"${SIGNING_HOME}\"."
    exit 1
fi
#DEBUGWINE="WINEDEBUG=warn+all"
DEBUGWINE=
echo Clearing ${WINE_HOME}
rm -Rf ${WINE_HOME}/*
rm -Rf ${WINE_HOME}/.[a-zA-Z0-9]*
mkdir ${WINE_HOME}/.ssh
cat ~/.ssh/id_rsa.pub > ${WINE_HOME}/.ssh/authorized_keys
chmod 700 ${WINE_HOME}/.ssh
mkdir ${WINE_HOME}/bin
echo "cd tmp" > ${WINE_HOME}/bin/build-alpha
echo "cd app-wininstaller" >> ${WINE_HOME}/bin/build-alpha
echo "$DEBUGWINE wine cmd /c build.cmd" >> ${WINE_HOME}/bin/build-alpha
mkdir ${WINE_HOME}/tmp
cp -a ${WININSTALLER_PATH} ${WINE_HOME}/tmp
(cd ${WINE_HOME}/tmp/app-wininstaller; git checkout master)
echo Copied
GITVERSION=`cd ${WINE_HOME}/tmp/app-wininstaller && git describe --always --abbrev=40`
if [[ -z $GITVERSION ]]; then echo Could not get git version; exit 1; fi
echo Git version is $GITVERSION
rm -Rf ${WINE_HOME}/tmp/app-wininstaller/.git
mkdir ${WINE_HOME}/tmp/app-wininstaller/lib

# Copy files

cp ${RELEASE_DIRECTORY}/freenet.jar ${WINE_HOME}/tmp/app-wininstaller/res/install_node/freenet.jar || exit
cp ${RELEASE_DIRECTORY}/freenet-ext.jar ${WINE_HOME}/tmp/app-wininstaller/res/install_node/freenet-ext.jar || exit
cp ${RELEASE_DIRECTORY}/dependencies/bcprov-jdk15on-147.jar ${WINE_HOME}/tmp/app-wininstaller/res/install_node/bcprov-jdk15on-147.jar || exit
cp ${SIGNING_HOME}/seednodes.fref ${WINE_HOME}/tmp/app-wininstaller/res/install_node/seednodes.fref || exit
for x in JSTUN KeyUtils ThawIndexBrowser UPnP Library; do
  cp ${RELEASE_DIRECTORY}/${x}.jar ${WINE_HOME}/tmp/app-wininstaller/res/install_node/plugins/${x}.jar || exit
done
cp "${RELEASE_DIRECTORY}/dependencies/Ahk2Exe.exe"            "res/tool_ahk/"                    || exit
cp "${RELEASE_DIRECTORY}/dependencies/AutoHotkeySC.bin"       "res/tool_ahk/"                    || exit
echo Copied dependancies.

VERSION=`cat ${RELEASE_DIRECTORY}/freenet.build`
echo VERSION is $VERSION
echo Updating build
sed -i "s/_Inc_FreenetBuild = \#[0-9]\\+/_Inc_FreenetBuild = \#$VERSION/" src/freenetinstaller/FreenetInstaller_Include_Info.inc
chown -R ${WINE_USER}.${WINE_USER} ${WINE_HOME}
chmod +x ${WINE_HOME}/bin/build-alpha
echo Running the build
rm ${WINE_HOME}/tmp/app-wininstaller/bin/*
eval `ssh-agent -s`
ssh-add

function stopAgent() {
    ssh-agent -k
}

trap stopAgent EXIT


ssh -n ${WINE_USER}@localhost xvfb-run ${WINE_HOME}/bin/build-alpha
kill -9 `pgrep -u ${WINE_USER}`
cd
mkdir -p tmp-wi
cd tmp-wi || exit
rm *
cp ${WINE_HOME}/tmp/app-wininstaller/bin/FreenetInstaller.exe FreenetInstaller-${VERSION}.exe || exit
cd ${WINE_HOME}/tmp/app-wininstaller/res/install_node/updater/ || exit
cp update.cmd update-new.cmd || exit
sha1sum update-new.cmd > update-new.cmd.sha1 || exit
sha1sum update.cmd > update.cmd.sha1 || exit
cd ~/tmp-wi

echo Signing
cp FreenetInstaller-${VERSION}.exe ${SIGNING_HOME}/
su - ${SIGNING_USER} -c "gpg --sign --detach-sign FreenetInstaller-${VERSION}.exe"
cp ${SIGNING_HOME}/FreenetInstaller-${VERSION}.exe.sig .

if [[ "$DRY_RUN" = "true" ]]; then
    echo "Dry run - exiting without performing release."
    exit 0
fi

echo -n "Perform release [y/N]?"
read response
if [[ $(echo "$response" | tr '[:upper:]' '[:lower:]') != "y" ]]; then
    echo "Aborting release."
    exit 0
fi

rsync ${WINE_HOME}/tmp/app-wininstaller/res/install_node/updater/update*cmd* ${TARGET_HOST}:/var/www/downloads/alpha/update/

echo Uploading
echo Uploading to emu
rsync -v FreenetInstaller-${VERSION}.exe* ${TARGET_HOST}:/var/www/downloads/alpha/installer/
cp FreenetInstaller-${VERSION}.exe* ${RELEASE_DIRECTORY}
ssh ${TARGET_HOST} -- "sed -i \"s/FreenetInstaller.exe .*$/FreenetInstaller.exe installer\/FreenetInstaller-${VERSION}.exe/\" /var/www/downloads/alpha/.registry"

cp ${WINE_HOME}/tmp/app-wininstaller/res/install_node/wrapper/freenetwrapper.exe ${WINE_HOME}/tmp/app-wininstaller/bin/wrapper-windows-x86-32.exe || exit

cp ${WINE_HOME}/tmp/app-wininstaller/res/install_node/wrapper/wrapper-windows-x86-32.dll ${WINE_HOME}/tmp/app-wininstaller/bin/ || exit

cd ${WINE_HOME}/tmp/app-wininstaller/bin/
mv freenetlauncher.exe freenetlauncher-new.exe

for name in wrapper-windows-x86-32.exe wrapper-windows-x86-32.dll freenetlauncher-new.exe; do

cd ${WINE_HOME}/tmp/app-wininstaller/bin/

echo Uploading ${name} version ${GITVERSION}

mv $name ${name}.${GITVERSION}
sha1sum ${name}.${GITVERSION} > ${name}.${GITVERSION}.sha1
rsync -v ${name}.${GITVERSION}* ${TARGET_HOST}:/var/www/downloads/alpha/installer/

ssh ${TARGET_HOST} -- "sed -i \"s/$name .*$/${name} installer\/${name}.${GITVERSION}/\" /var/www/downloads/alpha/.registry"

done


# Doesn't work, why?
#echo "http://downloads.freenetproject.org/alpha/installer/FreenetInstaller-${VERSION}.exe" > FreenetInstaller.exe.url
#rsync -vz FreenetInstaller.exe.url ${TARGET_HOST}:/var/www/downloads/alpha/installer/FreenetInstaller.exe.url
echo Now upload ~browser/FreenetInstaller-${VERSION}.exe to Google Code!
